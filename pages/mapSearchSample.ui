<!--Google maps touchUI component with Google Places API autocomplete-->
<!--mapSearchTips.ui-->
<template>
    <ui-page height="{{conHeight}}">
      test
      <ui-view bindtap="searchShow(flag)" class="section {{show?'sectionBack':''}}">
        <ui-row>
          <ui-col vertical-align="middle">
            <ui-view class="analogSearch" ui:if="keywords === ''">Search location 搜索地点</ui-view>
            <ui-view class="analogSearch" ui:elif="keywords !== ''">{{analogSearch}}</ui-view>
          </ui-col>
        </ui-row>
      </ui-view>


      <ui-view class="querySearch" style="{{{height:conHeight+'px'}}}" ui:show="{{show}}">
        <ui-view class="section {{show?'sectionBack':''}}">
        <ui-form action="/search" bindsubmit="search"> 
          <ui-row>
            <ui-col vertical-align="middle">
              <ui-input bindinput="bindInput" focus="{{ show }}" 
                        ui:model={{keywords}} type="search"  
                        bindfocus="bindfocus" bindblur="bindblur" 
                        name="search" placeholder="Search Location 搜索地点">
              </ui-input>
            </ui-col>
          </ui-row>
        </ui-form>
      </ui-view>
          <ui-view bindtap="associationalSearch($event,'tips',index,item.structured_formatting.main_text,item.place_id,0)" ui:for-item="item" class="text_box" ui:for="{{tips}}">
          {{item.structured_formatting.main_text}}
        </ui-view>
      </ui-view>


      <ui-popup ui:model="{{ show2 }}" position="bottom" height="300" mask-style="{{{ backgroundColor: 'transparent' }}}"  hide-on-tap="{{false}}" bindhide="bindhide" bindshow="bindshow">
         <ui-view class="infobox" bindtap="associationalSearch($event,'tips3',index,item.structured_formatting.main_text,item.place_id,1)" ui:for-item="item" class="text_box" ui:for="{{tips3}}">
          <ui-row>
            <ui-col class="info-1">{{item.structured_formatting.main_text}}</ui-col>
          </ui-row>
          <ui-row>
            <ui-col>{{item.description}}</ui-col>
          </ui-row>
        </ui-view>

      </ui-popup>

      <ui-fixed-view bottom="0" left="0" right="0" style="height:45px;z-index:1;background-color:#fff;width:100%;text-align:center;line-height:45px;" ui:show="{{show3}}" bindtap="toggle">
        See search results for `{{keywords}}` 查看“{{keywords}}”搜索结果
      </ui-fixed-view> 


      <ui-map 
      id="map" 
      map-service="google"
      height="{{conHeight}}"
      markers="{{markers}}"
      longitude="{{longitude}}"
      latitude="{{latitude}}"
      show-location="{{true}}"
      bindcallouttap="callouttap"
      scale="18"
      style="width:100%;height:93vh;">
    </ui-map>
    </ui-page>
  </template>



<script>
export default {
  config: {
    navigationBarTitleText:
      "Google maps touchUI component with Google Places API autocomplete"
  },
  // - FIXME: rename the tips123 and show123 variables to be more informative.
  data() {
    return {
      conHeight: ui.DEFAULT_CONTENT_HEIGHT,
      headerHeight: ui.DEFAULT_HEADER_HEIGHT,
      tips: [],
      tips2: [],
      tips3: [],
      keywords: "",
      tempKeywords: "",
      latitude: -27.470125,
      longitude: 153.021072,
      analogSearch: "",
      show: true,
      show2: false,
      show3: false,
      flag: null,
      markers: []
    };
  },
  methods: {
    // - FIXME: camelcase, fix functions and the flag variables.
    callouttap(e) {
      // Open map nav. Use interface paras to zero in on a location.
      const tuiSysMapInterfaceObject = {
        latitude: -27.470125,
        longitude: 153.021072,
        name: "Brisbane",
        // - FIXME: Sample code confusing function callbacks. Check docs.
        success: res => {
          console.log("calloutTap:: success", res);
        },
        fail: res => {
          console.log("calloutTap:: fail", res);
        },
        complete: res => {
          console.log("calloutTap:: complete", res);
        }
      };
      ui.openSysMap(tuiSysMapInterfaceObject);
    },
    bindhide() {
      // - FIXME: show3
      console.log("bindHide");
      this.show3 = true;
    },
    bindshow() {
      console.log("bindShow");
      this.show3 = false;
    },
    toggle() {
      this.show2 = true;
    },
    bindTap2() {
      console.log("bindTap2");
    },
    // Activates on change in input
    bindInput(e) {
      this.show = true;
      // - FIXME: that = this!?!?!?!?! Why does the sample need to maintain reference to old copy of page
      const that = this;
      ui.request({
        url: "https://maps.googleapis.com/maps/api/place/autocomplete/json",
        data: {
          input: this.keywords,
          language: "en",
          key: "AIzaSyAkMGyXxYXxJkWR1VJmGaa66ma-2Ni13kQ"
        },
        success: res => {
          that.tips = res.data.predictions;
        }
      });
    },
    search() {
      //  - FIXME: that = this?!?!?!?
      this.show2 = true;
      ui.request({
        url: "https://maps.googleapis.com/maps/api/place/autocomplete/json",
        data: {
          input: this.keywords,
          language: "en",
          key: "AIzaSyAkMGyXxYXxJkWR1VJmGaa66ma-2Ni13kQ"
        },
        success: res => {
          that.tips3 = res.data.predictions;
          console.log("search:: that.tips3", that.tips3);
        }
      });
    },
    // Associative words search?
    associationalSearch(e, data, index, title, place_id, flag) {
      let that = this;
      this.show3 = false;
      var keywords = title;
      if (flag === 0) {
        this.analogSearch = keywords;
        this.tempKeywords = keywords;
        this.flag = 0;
      } else if (flag === 1) {
        this.flag = 1;
        this.tempKeywords = keywords;
      }
      ui.request({
        url: "https://maps.googleapis.com/maps/api/place/details/json",
        data: {
          placeid: place_id,
          language: "en",
          key: "AIzaSyAkMGyXxYXxJkWR1VJmGaa66ma-2Ni13kQ"
        },
        success: function(res) {
          console.log(res);
          that.latitude = res.data.result.geometry.location.lat;
          that.longitude = res.data.result.geometry.location.lng;
          let markersSearch = [
            {
              id: 1,
              latitude: that.latitude,
              longitude: that.longitude,
              iconPath: require("#/images/map/posi_gmap_old.png"),
              label: {
                fontSize: 12,
                color: "#FF0000",
                content: "",
                x: 0.5,
                y: 0.5
              },
              callout: {
                content: `<div class="c-wrap">
                            <div class="info">
                              <p class="a-name">${res.data.result.name}</p>
                              <p class="a-info">${
                                res.data.result.formatted_address
                              }</p>
                            </div>
                            <div class="click">导航</div>
                          </div>
                          `,
                color: "#000000",
                fontSize: 16,
                bgColor: "#ffffff",
                borderRadius: 10,
                display: "ALWAYS",
                padding: 6
              },
              width: 30,
              height: 40
            }
          ];
          that.markers = JSON.parse(JSON.stringify(markersSearch));
        }
      });

      this.show = false;
      this.show2 = false;
    },
    bindfocus() {
      this.show = true;
      this.bindInput();
    },
    bindblur() {
      this.show = false;
    },
    // - FIXME: Undocumented "flag" variable in the SAMPLE CODE.~ >5 undocumented flags.
    searchShow() {
      this.show = true;
      if (this.flag === 0 ) {
        this.keywords = this.tempKeywords;
      } else if (this.flag === 1) {
        return false;
      }
    }
  },
  mounted() {
    console.log("mapSearchSample::mounted:: ");
  }
};
</script>

<style lang="less">

</style>
